services:
  # Web server name.
  apache-php:
    # Dockerfile directory and name (case sensitive).
    build:
      context: .
      dockerfile: Dockerfile
    # Ports mapping.
    ports:
    - 80:80
    volumes:
      # Bind mount the host source directory to the service container.
      - .:/var/www/html
  # DB server name.
  mysql:
    # MySQL latest.
    image: mysql:latest
    # Used port. Always use string to avoid base60 Yaml troubles for numbers less than 60.
    expose:
      - "3306"
    # User running "mysql".
    user: root
    # Environment variables.
    environment:
      # Password for user "root".
      MYSQL_ROOT_PASSWORD: root
    # Define the volumes.
    volumes:
      # Bind mount the host SQL init script to the entry-point directory of the service container (read-only).
      #- ./sql/XXX.sql:/docker-entrypoint-initdb.d/XXX.sql:ro
      # The named volume used to persist the service data directory.
      - dbdata:/var/lib/mysql
  # phpMyAdmin app name.
  phpmyadmin:
    # phpMyAdmin latest.
    image: phpmyadmin:latest
    # Ports mapping. Port 8080 while 80 is already used by "apache".
    ports:
      - 8080:80
    # Start after...
    depends_on:
      - mysql
    # Environment variables.
    environment:
      # Take environment from "mysql".
      - PMA_HOST=mysql
# Create the needed volumes.
volumes:
  # The named volume (no matter its location) used to persist the service data directory.
  dbdata:
